final 对变量的修饰
    基本类型
    可变对象
    不可变对象
    
    对象的可变与不可变是什么意思 
    
    
静态域
    静态方法：工厂方法
    

重载 overloading
有相同的名字、不同的参数，便产生了重载

仅当类没有提供任何构造器的时候，系统才会提供一个默认的构造器。

在执行构造器之前，先执行赋值操作。
初始化块（initialization block）。在一个类的声明中，可以包含多个代码块。只要构造类的对象，这些块就会被执行。

不允许扩展的类被称为final类。如果在定义类的时候使用了final修饰符就表明这个类是final类。

域也可以被声明为final。对于final域来说，构造对象之后就不允许改变它们的值了。
不过，如果将一个类声明为final，只有其中的方法自动地成为final，而不包括域。

抽象类 abstract
抽象类通常用于表示一种"是什么"的关系，它是类的一种特殊类型。
接口则表示一种"可以做什么"的关系，它定义了一组方法供类实现。
如果你希望多个类共享某些相似的方法或行为，而无需继承同一个类，那么接口更适合使用。


下面归纳一下Java用于控制可见性的4个访问修饰符：
1）仅对本类可见——private。
2）对所有类可见——public。
3）对本包和所有子类可见——protected。
4）对本包可见——默认（很遗憾），不需要修饰符


删去了类型参数的“原始”类型


---------------------------------------------------------------------
Java语言规范将派生于Error类或RuntimeException类的所有异常
称为非受查（unchecked）异常，所有其他的异常称为受查（checked）异常。

在方法的首部声明这个方法可能抛出的异常。

方法声明抛出异常的主要目的是告诉调用方方法可能会发生异常，
调用方需要相应地处理异常，要么通过try-catch块捕获异常，要么通过再次声明异常继续向上层调用者传递。

